{"version":3,"sources":["GiftExpertApp/AddCategory/AddCategory.js","GiftExpertApp/helpers/getGifts.js","GiftExpertApp/ShowGifts.js","GiftExpertApp/GiftGird.js","GiftExpertApp/hooks/useFetchGifs.js","GiftExpertApp/GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","gif","id","title","images","downsized_medium","ShowGifts","className","src","alt","GiftGird","loading","state","setstate","useEffect","then","img","useFetchGifs","gift","GiftExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6LAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACDC,mBAAS,IADR,mBAC/BC,EAD+B,KACnBC,EADmB,KAevC,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAgB,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OAC1CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBS,SAACP,GAClBF,EAAgBE,EAAEQ,OAAOF,a,+BCUdG,EAhBL,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACPC,EADO,gDACyCC,UAAUH,GADnD,+DAEMI,MAAQF,GAFd,cAEPG,EAFO,gBAGQA,EAAKC,OAHb,uBAGNC,EAHM,EAGNA,KAEDC,EAAQD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAChB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATzC,kBAaNM,GAbM,4CAAH,sDCUCO,EATG,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxB,OACI,sBAAKc,UAAY,aAAjB,UACI,qBAAKC,IAAOf,EAAMgB,IAAMN,IACxB,kCAAMA,EAAN,WCwBGO,EA1BG,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDV,SAAEA,GAAe,IAAD,EAEdd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OATAC,qBAAY,WACRxB,EAAUC,GACLwB,MAAM,SAAAC,GAAG,OAAIH,EAAW,CACrBf,KAAMkB,EACNL,SAAS,SAElB,CAAEpB,IAGEqB,EDd2BK,CAAc1B,GAAnCa,EAFqB,EAE1BN,KAAca,EAFY,EAEZA,QAEtB,OACI,eAAC,WAAD,WAEMA,GAAW,6CAEb,mCAAOpB,EAAP,OACA,qBAAKgB,UAAU,YAAf,SAEQH,EAAOJ,KAAM,SAAAkB,GACT,OACI,cAAC,EAAD,eAESA,GADGA,EAAKhB,aEY9BiB,EA3BO,WAAQ,IAAD,EAEa1C,mBAAS,CAAE,YAFxB,mBAEjB2C,EAFiB,KAEL5C,EAFK,KAIzB,OACI,eAAC,WAAD,WACA,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ4C,EAAWpB,KAAM,SAAAT,GACb,OACI,cAAC,EAAD,CAEIA,SAAYA,GADNA,YCX5B8B,G,MAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAoBJ,K","file":"static/js/main.342154c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n    const [ inputValue, setInputValue ] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue ( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault()        \r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories ( cats =>  [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='text'\r\n                value= { inputValue }\r\n                onChange= { handleChange }                \r\n            />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","\r\nconst getGifts = async ( category ) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=8kLrlo8YQge6rb3zk8T3IBBLzUVNhkmH`;\r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json()\r\n\r\n    const gifts = data.map ( gif => {\r\n                    return {\r\n                        id: gif.id,\r\n                        title: gif.title,\r\n                        url: gif.images?.downsized_medium.url\r\n                    }\r\n                })\r\n     \r\n    return gifts\r\n    }\r\n\r\n    export default getGifts;","import React from 'react';\r\n\r\nconst ShowGifts = ({ title, url }) => {\r\n    return (\r\n        <div className = 'card-gifts'>\r\n            <img src= { url } alt= {title}/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowGifts;","import React, { Fragment } from 'react';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\nimport ShowGifts from './ShowGifts'\r\n\r\nconst GiftGird  = ( { category } ) => {\r\n\r\n    const { data:images , loading } = useFetchGifs( category )\r\n\r\n    return(\r\n        <Fragment>\r\n\r\n            { loading && <p> Cargando...</p>}\r\n\r\n            <h3> { category } </h3>\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map ( gift => {\r\n                        return (\r\n                            <ShowGifts\r\n                                key = { gift.id }\r\n                                { ...gift }    \r\n                            />                    \r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GiftGird;","import { useState, useEffect } from 'react'\r\nimport getGifts from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState( {\r\n        data: [],\r\n        loading: true\r\n    } )\r\n    \r\n\r\n    useEffect ( () => {\r\n        getGifts( category )\r\n            .then( img => setstate ( {\r\n                data: img,\r\n                loading: false\r\n            } ) )\r\n    }, [ category ])\r\n\r\n\r\n    return state\r\n}\r\n","import React, { Fragment, useState } from  'react';\r\nimport AddCategory from './AddCategory/AddCategory'\r\nimport GiftGird from './GiftGird'\r\n\r\nconst GiftExpertApp = ( ) => {\r\n\r\n    const [ categories, setCategories ] = useState([ 'Simpson' ])\r\n\r\n    return(\r\n        <Fragment>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories= { setCategories }/>\r\n        <hr />\r\n        <ul>\r\n            {\r\n                categories.map ( category => {\r\n                    return (\r\n                        <GiftGird  \r\n                            key={ category }\r\n                            category= { category }  \r\n                        />    \r\n                    )\r\n                                            \r\n                })\r\n            }\r\n        </ul>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\r\nimport ReactDOM from'react-dom';\r\nimport GiftExpertApp from './GiftExpertApp/GiftExpertApp';\r\n\r\nimport './index.css';\r\n\r\n\r\nconst divRoot = document.querySelector('#app')\r\n\r\nReactDOM.render( <GiftExpertApp /> , divRoot); "],"sourceRoot":""}